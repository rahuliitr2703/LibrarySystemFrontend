{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/login-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class UsernamePasswordOptionComponent {\n  constructor(loginService, router) {\n    this.loginService = loginService;\n    this.router = router;\n    this.userTypeValue = 'Buyer';\n  }\n  getFormData(data) {\n    console.log(data);\n    // this.loginService.checkUserAuth(data).subscribe((res:any)=>{\n    //   console.log(res);\n    // })  \n    const res = this.loginService.checkUserAuth(data);\n    if (res['status'] == true) {\n      console.log(res);\n      if (res['userType'] == 'Buyer') {\n        this.router.navigate(['buyerDashboard']);\n      } else if (res['userType'] == 'Seller') {\n        this.router.navigate(['sellerDashboard']);\n      } else if (res['userType'] == 'Admin') {\n        this.router.navigate(['adminDashboard']);\n      }\n    } else {\n      this.router.navigate(['login']);\n    }\n  }\n  static #_ = this.ɵfac = function UsernamePasswordOptionComponent_Factory(t) {\n    return new (t || UsernamePasswordOptionComponent)(i0.ɵɵdirectiveInject(i1.LoginServiceService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UsernamePasswordOptionComponent,\n    selectors: [[\"app-username-password-option\"]],\n    decls: 23,\n    vars: 1,\n    consts: [[1, \"container\", \"col-6\", \"mt-5\"], [3, \"ngSubmit\"], [\"usernamePasswordForm\", \"ngForm\"], [1, \"form-group\", \"m-2\"], [\"for\", \"exampleInputEmail1\"], [\"type\", \"text\", \"name\", \"username\", \"ngModel\", \"\", \"placeholder\", \"Enter Usernane\", 1, \"form-control\"], [\"for\", \"exampleInputPassword1\"], [\"type\", \"password\", \"name\", \"password\", \"ngModel\", \"\", \"placeholder\", \"Enter Password\", 1, \"form-control\"], [\"for\", \"inputState\"], [\"name\", \"userType\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"selected\", \"\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"m-2\"]],\n    template: function UsernamePasswordOptionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function UsernamePasswordOptionComponent_Template_form_ngSubmit_1_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const _r0 = i0.ɵɵreference(2);\n          return i0.ɵɵresetView(ctx.getFormData(_r0.value));\n        });\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\", 4);\n        i0.ɵɵtext(5, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 3)(8, \"label\", 6);\n        i0.ɵɵtext(9, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 3)(12, \"label\", 8);\n        i0.ɵɵtext(13, \"User Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"select\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function UsernamePasswordOptionComponent_Template_select_ngModelChange_14_listener($event) {\n          return ctx.userTypeValue = $event;\n        });\n        i0.ɵɵelementStart(15, \"option\", 10);\n        i0.ɵɵtext(16, \"Buyer\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"option\");\n        i0.ɵɵtext(18, \"Seller\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"option\");\n        i0.ɵɵtext(20, \"Admin\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"button\", 11);\n        i0.ɵɵtext(22, \"Submit\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngModel\", ctx.userTypeValue);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["UsernamePasswordOptionComponent","constructor","loginService","router","userTypeValue","getFormData","data","console","log","res","checkUserAuth","navigate","_","i0","ɵɵdirectiveInject","i1","LoginServiceService","i2","Router","_2","selectors","decls","vars","consts","template","UsernamePasswordOptionComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","UsernamePasswordOptionComponent_Template_form_ngSubmit_1_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","value","ɵɵtext","ɵɵelementEnd","ɵɵelement","UsernamePasswordOptionComponent_Template_select_ngModelChange_14_listener","$event","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\A\\Desktop\\Hackathon\\frontend\\src\\app\\login\\username-password-option\\username-password-option.component.ts","C:\\Users\\A\\Desktop\\Hackathon\\frontend\\src\\app\\login\\username-password-option\\username-password-option.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { LoginServiceService } from 'src/app/services/login-service.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-username-password-option',\n  templateUrl: './username-password-option.component.html',\n  styleUrls: ['./username-password-option.component.css']\n})\nexport class UsernamePasswordOptionComponent {\n  userTypeValue = 'Buyer';\n  constructor(private loginService: LoginServiceService, private router: Router){}\n\n  getFormData(data:any){\n    console.log(data);\n    // this.loginService.checkUserAuth(data).subscribe((res:any)=>{\n    //   console.log(res);\n    // })  \n    const res = this.loginService.checkUserAuth(data);\n    if(res['status'] == true){\n      console.log(res);\n      if(res['userType'] == 'Buyer'){\n        this.router.navigate(['buyerDashboard']);\n      } else if(res['userType'] == 'Seller'){\n        this.router.navigate(['sellerDashboard']);\n      } else if(res['userType'] == 'Admin'){\n        this.router.navigate(['adminDashboard']);\n      }\n    } else {\n      this.router.navigate(['login']);\n    }\n  }\n}\n","<div class=\"container col-6 mt-5\">\n    <form #usernamePasswordForm=\"ngForm\" (ngSubmit)=\"getFormData(usernamePasswordForm.value)\">\n        <div class=\"form-group m-2\">\n            <label for=\"exampleInputEmail1\">Username</label>\n            <input type=\"text\" class=\"form-control\" name='username' ngModel placeholder=\"Enter Usernane\">\n        </div>\n        <div class=\"form-group m-2\">\n            <label for=\"exampleInputPassword1\">Password</label>\n            <input type=\"password\" class=\"form-control\" name='password' ngModel placeholder=\"Enter Password\">\n        </div>\n        <div class=\"form-group m-2\">\n            <label for=\"inputState\">User Type</label>\n            <select class=\"form-control\" name=\"userType\" [(ngModel)]=\"userTypeValue\">\n                <option selected>Buyer</option>\n                <option>Seller</option>\n                <option>Admin</option>\n            </select>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary m-2\">Submit</button>\n    </form>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}