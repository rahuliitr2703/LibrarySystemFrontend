{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/login-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction UsernamePasswordOptionComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1, \"You have entered wrong credentials. Please try again\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class UsernamePasswordOptionComponent {\n  constructor(loginService, router) {\n    this.loginService = loginService;\n    this.router = router;\n    this.userTypeValue = 'Buyer';\n    this.showErrorMessage = false;\n  }\n  getFormData(data) {\n    console.log(data);\n    // this.loginService.checkUserAuth(data).subscribe((res:any)=>{\n    //   console.log(res);\n    // })  \n    const res = this.loginService.checkUserAuth(data);\n    if (res['status'] == true) {\n      console.log(res);\n      if (res['userType'] == 'Buyer') {\n        this.router.navigate(['buyerDashboard']);\n      } else if (res['userType'] == 'Seller') {\n        this.router.navigate(['sellerDashboard']);\n      } else if (res['userType'] == 'Admin') {\n        this.router.navigate(['adminDashboard']);\n      }\n    } else {\n      //this.router.navigate(['login']);\n      this.showErrorMessage = true;\n    }\n  }\n  static #_ = this.ɵfac = function UsernamePasswordOptionComponent_Factory(t) {\n    return new (t || UsernamePasswordOptionComponent)(i0.ɵɵdirectiveInject(i1.LoginServiceService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UsernamePasswordOptionComponent,\n    selectors: [[\"app-username-password-option\"]],\n    decls: 24,\n    vars: 2,\n    consts: [[1, \"container\", \"col-6\", \"mt-5\"], [3, \"ngSubmit\"], [\"usernamePasswordForm\", \"ngForm\"], [1, \"form-group\", \"m-2\"], [\"for\", \"exampleInputEmail1\"], [\"type\", \"text\", \"name\", \"username\", \"ngModel\", \"\", \"placeholder\", \"Enter Usernane\", 1, \"form-control\"], [\"for\", \"exampleInputPassword1\"], [\"type\", \"password\", \"name\", \"password\", \"ngModel\", \"\", \"placeholder\", \"Enter Password\", 1, \"form-control\"], [\"for\", \"inputState\"], [\"name\", \"userType\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"selected\", \"\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"m-2\"], [\"style\", \"color: red;\", 4, \"ngIf\"], [2, \"color\", \"red\"]],\n    template: function UsernamePasswordOptionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function UsernamePasswordOptionComponent_Template_form_ngSubmit_1_listener() {\n          i0.ɵɵrestoreView(_r2);\n          const _r0 = i0.ɵɵreference(2);\n          return i0.ɵɵresetView(ctx.getFormData(_r0.value));\n        });\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\", 4);\n        i0.ɵɵtext(5, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 3)(8, \"label\", 6);\n        i0.ɵɵtext(9, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 3)(12, \"label\", 8);\n        i0.ɵɵtext(13, \"User Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"select\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function UsernamePasswordOptionComponent_Template_select_ngModelChange_14_listener($event) {\n          return ctx.userTypeValue = $event;\n        });\n        i0.ɵɵelementStart(15, \"option\", 10);\n        i0.ɵɵtext(16, \"Buyer\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"option\");\n        i0.ɵɵtext(18, \"Seller\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"option\");\n        i0.ɵɵtext(20, \"Admin\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"button\", 11);\n        i0.ɵɵtext(22, \"Submit\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(23, UsernamePasswordOptionComponent_div_23_Template, 2, 0, \"div\", 12);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngModel\", ctx.userTypeValue);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.showErrorMessage);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","UsernamePasswordOptionComponent","constructor","loginService","router","userTypeValue","showErrorMessage","getFormData","data","console","log","res","checkUserAuth","navigate","_","ɵɵdirectiveInject","i1","LoginServiceService","i2","Router","_2","selectors","decls","vars","consts","template","UsernamePasswordOptionComponent_Template","rf","ctx","ɵɵlistener","UsernamePasswordOptionComponent_Template_form_ngSubmit_1_listener","ɵɵrestoreView","_r2","_r0","ɵɵreference","ɵɵresetView","value","ɵɵelement","UsernamePasswordOptionComponent_Template_select_ngModelChange_14_listener","$event","ɵɵtemplate","UsernamePasswordOptionComponent_div_23_Template","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\A\\Desktop\\Hackathon\\frontend\\src\\app\\login\\username-password-option\\username-password-option.component.ts","C:\\Users\\A\\Desktop\\Hackathon\\frontend\\src\\app\\login\\username-password-option\\username-password-option.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { LoginServiceService } from 'src/app/services/login-service.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-username-password-option',\n  templateUrl: './username-password-option.component.html',\n  styleUrls: ['./username-password-option.component.css']\n})\nexport class UsernamePasswordOptionComponent {\n  userTypeValue = 'Buyer';\n  showErrorMessage=false;\n  constructor(private loginService: LoginServiceService, private router: Router){}\n\n  getFormData(data:any){\n    console.log(data);\n    // this.loginService.checkUserAuth(data).subscribe((res:any)=>{\n    //   console.log(res);\n    // })  \n    const res = this.loginService.checkUserAuth(data);\n    if(res['status'] == true){\n      console.log(res);\n      if(res['userType'] == 'Buyer'){\n        this.router.navigate(['buyerDashboard']);\n      } else if(res['userType'] == 'Seller'){\n        this.router.navigate(['sellerDashboard']);\n      } else if(res['userType'] == 'Admin'){\n        this.router.navigate(['adminDashboard']);\n      }\n    } else {\n      //this.router.navigate(['login']);\n      this.showErrorMessage = true;\n    }\n  }\n}\n","<div class=\"container col-6 mt-5\">\n    <form #usernamePasswordForm=\"ngForm\" (ngSubmit)=\"getFormData(usernamePasswordForm.value)\">\n        <div class=\"form-group m-2\">\n            <label for=\"exampleInputEmail1\">Username</label>\n            <input type=\"text\" class=\"form-control\" name='username' ngModel placeholder=\"Enter Usernane\">\n        </div>\n        <div class=\"form-group m-2\">\n            <label for=\"exampleInputPassword1\">Password</label>\n            <input type=\"password\" class=\"form-control\" name='password' ngModel placeholder=\"Enter Password\">\n        </div>\n        <div class=\"form-group m-2\">\n            <label for=\"inputState\">User Type</label>\n            <select class=\"form-control\" name=\"userType\" [(ngModel)]=\"userTypeValue\">\n                <option selected>Buyer</option>\n                <option>Seller</option>\n                <option>Admin</option>\n            </select>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary m-2\">Submit</button>\n    </form>\n<div *ngIf=\"showErrorMessage\" style=\"color: red;\">You have entered wrong credentials. Please try again</div> \n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}