{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginServiceService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.Users = [{\n      \"username\": 'Vinay',\n      'password': '123',\n      'userType': 'Buyer'\n    }, {\n      \"username\": 'Rahul',\n      'password': '123',\n      'userType': 'Seller'\n    }, {\n      \"username\": 'Shivani',\n      'password': '123',\n      'userType': 'Admin'\n    }];\n    this.serverUrl = 'http://localhost:9000/';\n  }\n  checkUserAuth(data) {\n    // return this.httpClient.post(this.serverUrl + 'checkUserAuth', data, { observe: 'response'});\n    data['status'] = false;\n    for (let user of this.Users) {\n      if (user.username == data.username && user.password == data.password && user.userType == data.userType) data['status'] = true;\n    }\n    return data;\n  }\n  static #_ = this.ɵfac = function LoginServiceService_Factory(t) {\n    return new (t || LoginServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginServiceService,\n    factory: LoginServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["LoginServiceService","constructor","httpClient","Users","serverUrl","checkUserAuth","data","user","username","password","userType","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\A\\Desktop\\Hackathon\\frontend\\src\\app\\services\\login-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginServiceService {\n  constructor(private httpClient: HttpClient) { }\n  Users = [{\n    \"username\": 'Vinay',\n    'password': '123',\n    'userType': 'Buyer'\n  },\n  {\n    \"username\": 'Rahul',\n    'password': '123',\n    'userType': 'Seller'\n  },\n  {\n    \"username\": 'Shivani',\n    'password': '123',\n    'userType': 'Admin'\n  }];\n\n  serverUrl = 'http://localhost:9000/';\n\n  checkUserAuth(data:any){\n    // return this.httpClient.post(this.serverUrl + 'checkUserAuth', data, { observe: 'response'});\n    data['status'] = false; \n    for(let user of this.Users){\n      if(user.username == data.username && user.password == data.password && user.userType == data.userType) data['status'] = true;    \n    }\n    return data;\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,mBAAmB;EAC9BC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAC9B,KAAAC,KAAK,GAAG,CAAC;MACP,UAAU,EAAE,OAAO;MACnB,UAAU,EAAE,KAAK;MACjB,UAAU,EAAE;KACb,EACD;MACE,UAAU,EAAE,OAAO;MACnB,UAAU,EAAE,KAAK;MACjB,UAAU,EAAE;KACb,EACD;MACE,UAAU,EAAE,SAAS;MACrB,UAAU,EAAE,KAAK;MACjB,UAAU,EAAE;KACb,CAAC;IAEF,KAAAC,SAAS,GAAG,wBAAwB;EAjBU;EAmB9CC,aAAaA,CAACC,IAAQ;IACpB;IACAA,IAAI,CAAC,QAAQ,CAAC,GAAG,KAAK;IACtB,KAAI,IAAIC,IAAI,IAAI,IAAI,CAACJ,KAAK,EAAC;MACzB,IAAGI,IAAI,CAACC,QAAQ,IAAIF,IAAI,CAACE,QAAQ,IAAID,IAAI,CAACE,QAAQ,IAAIH,IAAI,CAACG,QAAQ,IAAIF,IAAI,CAACG,QAAQ,IAAIJ,IAAI,CAACI,QAAQ,EAAEJ,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI;;IAE9H,OAAOA,IAAI;EACb;EAAC,QAAAK,CAAA,G;qBA3BUX,mBAAmB,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAnBhB,mBAAmB;IAAAiB,OAAA,EAAnBjB,mBAAmB,CAAAkB,IAAA;IAAAC,UAAA,EAFlB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}